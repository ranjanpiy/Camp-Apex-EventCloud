/*Do not change the name of the class or the method signature.*/

public class CampApexSolution {
    public Integer minimumSteamAdjustments(List<Integer> powerLevels) {
     Integer i;Integer j; Integer num; Integer count=0;

     for(i=1;i< (powerLevels.size());i=i+2){
        if((powerLevels[i])>1){
            num = math.abs(powerLevels[i]-1);
            powerLevels.set(i,num);
            count++;
        }
     }

     for(j=0;j< (powerLevels.size()-1);j++){
        num = math.abs(powerLevels[j] -powerLevels[j+1]);
        if(num > 1)
        {count = -1;
        break;}
     }
     return count;
    }
    }
/*Engineer Eclair runs the magical Steam Swirl Station, where perfectly swirled ice cream is created using precisely calibrated steam vents. However, the steam vents are acting up today! Each vent is currently outputting random amounts of steam power.


To create the perfect ice cream swirl, the steam vents must be arranged so that each vent's power differs by exactly 1 from its adjacent vents. For example, a perfect sequence might be [3,4,3,2,3] where each number differs by exactly 1 from the numbers next to it.


Given a List of integers representing the current power level of each steam vent, determine the minimum number of adjustments needed to achieve a perfect swirl pattern. Each adjustment can increase or decrease a vent's power by 1.


If it's impossible to achieve a perfect swirl pattern, return -1.


Example 1:
Input: [2, 4, 2, 2]
Output: 2
Explanation: 
- Current pattern: [2,4,2,2]
- Desired pattern: [2,3,2,1] or [2,3,2,3]
- Need to change 4 to 3 (-1) and last 2 to either 1 (-1) or 3 (+1)
- Total adjustments needed: 2
Example 2:
Input: [1, 5, 2]
Output: -1
Explanation:
- The difference between 1 and 5 is too large to fix with the available positions
- No valid swirl pattern is possible
Example 3:
Input: [3, 3, 3]
Output: 1
Explanation:
- Current pattern: [3,3,3]
- Can be changed to [3,2,3] by decreasing the middle number by 1
- Only requires 1 adjustment



Constraints
Each steam vent's power will be between 1 and 9
The input list will contain at least 2 vents
The input list will never be null
Power can only be adjusted by +1 or -1 at a time
*/
